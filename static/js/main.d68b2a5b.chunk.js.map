{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["TodoItem","item","handleCompleted","className","completed","type","onChange","title","TodoList","items","map","key","id","TodoApp","useState","todos","setTodos","todoTitle","setTodoTitle","placeholder","value","event","target","onKeyDown","trim","NewTodo","Date","concat","htmlFor","todo","length","href","App","ReactDOM","render","document","getElementById"],"mappings":"iSAIaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,gBAAT,OACtB,wBACEC,UAAWF,EAAKG,UAAY,YAAc,IAE1C,yBAAKD,UAAU,QACb,2BACEE,KAAK,WACLF,UAAU,SACVG,SAAUJ,IAEZ,+BAAQD,EAAKM,OACb,4BACEF,KAAK,SACLF,UAAU,aAId,2BAAOE,KAAK,OAAOF,UAAU,WCfpBK,EAAW,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOP,EAAsB,EAAtBA,gBAShC,OACE,wBAAIC,UAAU,aAEVM,EAAMC,KAAI,SAAAT,GAAI,OACZ,kBAAC,EAAD,CACEA,KAAMA,EACNU,IAAKV,EAAKW,GAEVV,gBAAiB,kBAAMA,EAAgBD,EAAKW,YCpB3CC,EAAU,WAAO,IAAD,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,OAEOF,mBAAS,IAFhB,mBAEpBG,EAFoB,KAETC,EAFS,KAoC3B,OACE,6BAASf,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCAEA,8BACE,2BACEE,KAAK,OACLF,UAAU,WACVgB,YAAY,yBACZC,MAAOH,EACPX,SAjBW,SAACe,GACpB,IAAMd,EAAQc,EAAMC,OAAOF,MAE3BF,EAAaX,IAeLgB,UAlCS,SAACF,GAClB,IAAMd,EAAQc,EAAMC,OAAOF,MAAMI,OAC7BC,EAAU,GAEI,UAAdJ,EAAMV,KAAmBJ,IAC3BkB,EAAU,CACRlB,QACAK,IAAK,IAAIc,KACTtB,WAAW,GAGbY,EAASD,EAAMY,OAAOF,IACtBP,EAAa,UA2Bb,6BAASf,UAAU,QACjB,2BAAOE,KAAK,WAAWO,GAAG,aAAaT,UAAU,eACjD,2BAAOyB,QAAQ,cAAf,wBAEA,kBAAC,EAAD,CAAUnB,MAAOM,EAAOb,gBArDN,SAACU,GACvBI,EAASD,EAAML,KAAI,SAACmB,GAClB,OAAIjB,IAAOiB,EAAKjB,GACP,2BAAKiB,GAAZ,IAAkBzB,WAAYyB,EAAKzB,YAG9ByB,UAkDP,4BAAQ1B,UAAU,UAChB,0BAAMA,UAAU,cAAhB,UACMY,EAAMe,OADZ,gBAIA,wBAAI3B,UAAU,WACZ,4BACE,uBAAG4B,KAAK,KAAK5B,UAAU,YAAvB,QAGF,4BACE,uBAAG4B,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQ1B,KAAK,SAASF,UAAU,mBAAhC,sBCzEO6B,MANf,WACE,OACE,kBAAC,EAAD,OCIJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.d68b2a5b.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ item, handleCompleted }) => (\n  <li\n    className={item.completed ? 'completed' : ''}\n  >\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        onChange={handleCompleted}\n      />\n      <label>{item.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        // onClick={() => handleDelete()}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleCompleted: PropTypes.func.isRequired,\n};\n","/* eslint-disable arrow-body-style */\n/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ items, handleCompleted }) => {\n  // const handleStatusToggler = ({ completed }) => {\n  //   const status = !completed;\n\n  //   console.log(completed, status);\n\n  //   return status;\n  // };\n\n  return (\n    <ul className=\"todo-list\">\n      {\n        items.map(item => (\n          <TodoItem\n            item={item}\n            key={item.id}\n            // getItemStatus={handleStatusToggler}\n            handleCompleted={() => handleCompleted(item.id)}\n          />\n        ))\n      }\n      {/* <li>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>123</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li className=\"completed\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>qwertyuio</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li className=\"editing\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>zxcvbnm</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>1234567890</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li> */}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(TodoItem).isRequired,\n  handleCompleted: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { TodoList } from '../TodoList/TodoList';\n\nexport const TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [todoTitle, setTodoTitle] = useState('');\n\n  const handleCompleted = (id) => {\n    setTodos(todos.map((todo) => {\n      if (id === todo.id) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    }));\n  };\n\n  const addNewTodo = (event) => {\n    const title = event.target.value.trim();\n    let NewTodo = {};\n\n    if (event.key === 'Enter' && title) {\n      NewTodo = {\n        title,\n        id: +new Date(),\n        completed: false,\n      };\n\n      setTodos(todos.concat(NewTodo));\n      setTodoTitle('');\n    }\n  };\n\n  const handleChange = (event) => {\n    const title = event.target.value;\n\n    setTodoTitle(title);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={todoTitle}\n            onChange={handleChange}\n            onKeyDown={addNewTodo}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList items={todos} handleCompleted={handleCompleted} />\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {`${todos.length} items left`}\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './styles/index.css';\r\nimport './styles/todo-list.css';\r\nimport './styles/filters.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}